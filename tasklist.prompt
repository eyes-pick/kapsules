# Task List for kapsules

## Phase 1: Foundation & Tooling
- [x] Next.js app initialization (v0.1.0)
- [x] Integrate Tailwind CSS
- [x] Configure `tailwind.config.ts` & base styles
- [x] Enable ESLint + Prettier with TS support
- [x] Install shadcn/ui & Radix primitives
- [x] Create a ThemeProvider wrapper

## Phase 2: Prompt-Driven CLI/UI
- [ ] Build `<PromptInput>` React component
- [ ] Wire up model selector dropdown
- [ ] Implement ask/chat/edit toggle component
- [ ] Expose mode state to prompt processor
- [x] Create Portfolio, Projects, and Settings pages with modular Content/Shell structure
- [x] Add navigation and dropdown links for all main pages

## Phase 3: Core AI & Code-Gen Engine
- [x] Define frontend service to send prompts to LLM (stub/project-pipeline)
- [x] Map intents to generation modules (stub/project-pipeline)
- [ ] UI scaffold generator (React + shadcn/ui)
- [ ] API/data model generator (TypeScript interfaces + endpoints)
- [ ] File-system & ZIP packaging service

## Phase 4: Live-Preview Sandbox
- [ ] Create `<SandboxFrame>` wrapping an iframe
- [ ] Implement hot-reload on file updates
- [ ] Evaluate sandboxing strategy (postMessage, CSP)
- [ ] Integrate resource limits

## Phase 5: Quality, CI/CD & Testing
- [ ] GitHub Actions: lint, typecheck, build, test
- [ ] Dockerfile for consistent dev container
- [x] Unit tests for Supabase client, utility functions, and UI components
- [ ] Snapshot tests for generated UI

## Phase 6: Documentation & Templates
- [x] Flesh out `docs/getting-started.md`
- [x] Detail `docs/architecture.md` & `docs/roadmap.md`
- [ ] Define folder structure for reusable app templates
- [ ] Provide one example template

## Phase 7: Deployment & Release
- [ ] Vercel/Netlify integration
- [ ] CLI flag for “deploy” command
- [ ] Automate changelog generation on release
- [ ] Tag releases with GitHub Actions
